<?xml version="1.0" ?>
<robot name="twd_lidar_robot" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Robot constants -->
  <!-- Define the size of the robot's main chassis in meters-->
  <xacro:property name="base_length" value="0.21"/>
  <xacro:property name="base_width" value="0.11"/>
  <xacro:property name="base_height" value="0.035"/>

  <!-- Define the shape of the robot's two back wheels in metres-->
  <xacro:property name="wheel_outer_radius" value="0.0325"/>
  <xacro:property name="wheel_inner_radius" value="0.0225"/>
  <xacro:property name="wheel_width" value="0.025"/>

  <!-- x-axis points forward, y-axis points to left, z-axis points upwards -->
  <!-- Define the gap between the wheel and chassis along y-axis in meters -->
  <xacro:property name="wheel_ygap" value="0.003"/>

  <!-- Distance between centre of wheel and robot base/chassis -->
  <xacro:property name="wheel_zoff" value="0.0125"/>

  <!-- Inertial xacro macros -->  
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="thick_walled_cylinder_inertia" params="m r2 r1 h">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*(r2*r2 + r1*r1) + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*(r2*r2 + r1*r1) + h*h)}" iyz = "0" izz="${(m/2) * (r2*r2 + r1*r1)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <!-- Robot Base Footprint -->
  <!-- Define the centre of the main robot chassis projected on the ground -->
  <link name="base_footprint"/>

  <!-- The base footprint of the robot is located underneath the chassis/robot base  -->
  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin xyz="0 0 ${(wheel_outer_radius+wheel_zoff)}" rpy="0 0 0"/>
  </joint>
  
  <!-- Robot Base -->
  <link name="base_link">
      <visual>
        <origin xyz="0 0 -0.0125" rpy="0 0 0"/>
          <geometry>
              <mesh filename="package://twd_lidar_robot/meshes/robot_base_link.dae" />
          </geometry>
      </visual>
      <collision>
        <geometry>
          <box size="${base_length} ${base_width} ${base_height}"/>
        </geometry>
      </collision>

      <xacro:box_inertia m="0.863" w="${base_width}" d="${base_length}" h="${base_height}"/>
  </link>

  <!-- Drive Wheels -->
  <link name="left_wheel">
    <visual>
      <!-- y value is distance between centre of wheel and the chassis in the y-axis  -->
      <origin xyz="0 -0.0125 0" rpy="0 1.5707 1.5707"/>
        <geometry>
          <mesh filename="package://twd_lidar_robot/meshes/left_wheel.dae" />
        </geometry>
    </visual>
    <collision>
      <origin xyz="0 0.004 0" rpy="0 1.5707 1.5707"/>
      <geometry>
        <cylinder radius="${wheel_outer_radius}" length="${wheel_width}"/>
      </geometry>
    </collision>

    <xacro:thick_walled_cylinder_inertia m="0.031" r2="${wheel_outer_radius}" r1="${wheel_inner_radius}" h="${wheel_width}"/>
  </link>

  <joint name="left_wheel_hinge" type="revolute">
    <parent link="base_link"/>
    <child link="left_wheel"/>
    <origin xyz="-0.028 0.0675 -${wheel_zoff}" rpy="0 0 0"/>
    <limit upper="3.1415" lower="-3.1415" effort="30" velocity="5.0"/>
    <axis xyz="0 1 0"/>
  </joint>

  <link name="right_wheel">
    <visual>
      <origin xyz="0 0.0125 0" rpy="0 1.5707 1.5707"/>
      <geometry>
        <mesh filename="package://twd_lidar_robot/meshes/right_wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0.006 0" rpy="0 1.5707 1.5707"/>
      <geometry>
        <cylinder radius="${wheel_outer_radius}" length="${wheel_width}"/>
      </geometry>
    </collision>

    <xacro:thick_walled_cylinder_inertia m="0.031" r2="${wheel_outer_radius}" r1="${wheel_inner_radius}" h="${wheel_width}"/>
  </link>

  <joint name="right_wheel_hinge" type="revolute">
    <parent link="base_link"/>
    <child link="right_wheel"/>
    <origin xyz="-0.028 -0.075 -${wheel_zoff}" rpy="0 0 0"/>
    <limit upper="3.1415" lower="-3.1415" effort="30" velocity="5.0"/>
    <axis xyz="0 1 0"/>
  </joint>

  <!-- Caster mount -->
  <link name="caster_mount">
    <visual>
        <origin xyz="0 0 -0.04125" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://twd_lidar_robot/meshes/caster_mount.dae" />
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.017" length="0.0125"/>
      </geometry>
    </collision>
  </link>

  <joint name="caster_mount_to_base" type="fixed">
    <parent link="base_link"/>
    <child link="caster_mount"/>
    <origin xyz="0.086 0 -0.00625" rpy="0 0 0"/>
  </joint>

  <!-- Caster wheel -->
  <link name="caster_wheel">
    <visual>
      <origin xyz="0.01 0 -0.005" rpy="0 0 1.5707"/>
      <geometry>
        <mesh filename="package://twd_lidar_robot/meshes/caster_wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.025"/>
      </geometry>
    </collision>

    <xacro:sphere_inertia m="0.033" r="0.025"/>
  </link>

  <joint name="caster_wheel_to_mount" type="fixed">
    <parent link="caster_mount"/>
    <child link="caster_wheel"/>
    <!-- z is half the height of the caster mount and half the radius of the "sphere" of the caster wheel-->
    <origin xyz="0 0 -0.01875" rpy="0 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <!-- Raspberry Pi -->
  <link name="rpi_4">  
    <visual>
      <origin xyz="0 0 0" rpy="0 0 1.5707"/>
      <geometry>
        <mesh filename="package://twd_lidar_robot/meshes/rpi_4.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0.01" rpy="0 0 1.5707"/>
      <geometry>
        <box size="0.085 0.056 0.018"/>
      </geometry>
    </collision>
  </link>

  <joint name="rpi_4_to_base" type="fixed">
    <parent link="base_link"/>
    <child link="rpi_4"/>
    <origin xyz="-0.05 0 0.002" rpy="0 0 0"/>
  </joint>

  <!-- Rplidar base link -->
  <link name="rplidar_base">
    <visual>
        <!-- half the height of box + half the size of chassis thickness-->
      <origin xyz="0 0 -0.0185" rpy="0 0 3.142"/>
        <geometry>
          <mesh filename="package://twd_lidar_robot/meshes/rplidar_base.dae"/>
        </geometry>
      </visual>
    <collision>
      <origin xyz="-0.015 0 0" rpy="0 0 3.142"/>
      <geometry>
        <box size="0.0968 0.07 0.035"/>
      </geometry>
    </collision>
  </link>

  <joint name="rplidar_base_to_base_link" type="fixed">
    <parent link="base_link"/>
    <child link="rplidar_base"/>
    <!-- half the height of box + half the size of chassis thickness-->
    <origin xyz="0.068 -0.001 0.0185" rpy="0 0 0"/>
  </joint>

  <!-- Rplidar top link-->
  <link name='rplidar_top'>
    <visual>
      <origin xyz="0 0 -0.0105" rpy="0 0 1.0707"/>
      <geometry>
        <mesh filename="package://twd_lidar_robot/meshes/rplidar_top.dae"/>
      </geometry>
    </visual> 
    <collision>
      <geometry>
        <cylinder radius="0.035" length="0.021"/>
      </geometry>
    </collision>

  </link>

  <joint name="rplidar_joint" type="fixed">
    <parent link="rplidar_base"/>
    <child link="rplidar_top"/>
    <!-- half height of rplidar base + half height of rplidar top -->
    <origin xyz="0 0.0027 0.028" rpy="0 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <!-- IMU  -->
  <link name="imu_link"/>

  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="-0.10 0 0.05" rpy="0 0 0"/> 
  </joint>
</robot>
